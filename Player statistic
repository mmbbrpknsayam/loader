local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- UI Root
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PlayerHub"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0.8, 0, 0.8, 0)
mainFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
mainFrame.BorderSizePixel = 2

-- Player List Panel
local playerListFrame = Instance.new("ScrollingFrame", mainFrame)
playerListFrame.Size = UDim2.new(0.3, 0, 1, 0)
playerListFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
playerListFrame.ScrollBarThickness = 8
playerListFrame.BackgroundColor3 = Color3.fromRGB(180, 180, 180)
playerListFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
playerListFrame.AutomaticSize = Enum.AutomaticSize.None
playerListFrame.BorderSizePixel = 1

-- Layout
local listLayout = Instance.new("UIListLayout")
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 4)
listLayout.Parent = playerListFrame

-- Detail Panel
local detailFrame = Instance.new("Frame", mainFrame)
detailFrame.Size = UDim2.new(0.7, 0, 1, 0)
detailFrame.Position = UDim2.new(0.3, 0, 0, 0)
detailFrame.BackgroundColor3 = Color3.fromRGB(245, 245, 245)

-- Thumbnail
local thumbnail = Instance.new("ImageLabel", detailFrame)
thumbnail.Size = UDim2.new(0, 100, 0, 100)
thumbnail.Position = UDim2.new(0, 20, 0, 20)
thumbnail.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
thumbnail.BorderSizePixel = 1
thumbnail.ScaleType = Enum.ScaleType.Fit
thumbnail.Visible = false  -- Hide the image label (no image)

-- Display Name
local displayNameLabel = Instance.new("TextLabel", detailFrame)
displayNameLabel.Position = UDim2.new(0, 140, 0, 20)
displayNameLabel.Size = UDim2.new(1, -160, 0, 30)
displayNameLabel.TextScaled = true
displayNameLabel.Font = Enum.Font.SourceSans
displayNameLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
displayNameLabel.Text = "DisplayName"

-- Username
local usernameLabel = Instance.new("TextLabel", detailFrame)
usernameLabel.Position = UDim2.new(0, 140, 0, 55)
usernameLabel.Size = UDim2.new(1, -160, 0, 30)
usernameLabel.TextScaled = true
usernameLabel.Font = Enum.Font.SourceSans
usernameLabel.TextColor3 = Color3.fromRGB(50, 50, 50)
usernameLabel.Text = "Username"

-- Stats Label
local statsLabel = Instance.new("TextLabel", detailFrame)
statsLabel.Position = UDim2.new(0, 20, 0, 140)
statsLabel.Size = UDim2.new(1, -40, 0, 25)
statsLabel.Text = "Stats:"
statsLabel.TextScaled = true
statsLabel.Font = Enum.Font.SourceSansBold
statsLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

-- Health
local healthLabel = Instance.new("TextLabel", detailFrame)
healthLabel.Position = UDim2.new(0, 20, 0, 170)
healthLabel.Size = UDim2.new(1, -40, 0, 25)
healthLabel.Text = "Health: N/A"
healthLabel.TextScaled = true
healthLabel.Font = Enum.Font.SourceSans
healthLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

-- Level
local levelLabel = Instance.new("TextLabel", detailFrame)
levelLabel.Position = UDim2.new(0, 20, 0, 200)
levelLabel.Size = UDim2.new(1, -40, 0, 25)
levelLabel.Text = "Level: N/A"
levelLabel.TextScaled = true
levelLabel.Font = Enum.Font.SourceSans
levelLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

-- To store the health change connection so we can disconnect it when switching players
local currentHealthConnection = nil

-- To store the level change connection so we can disconnect it when switching players
local currentLevelConnection = nil

-- Function to update health when it changes
local function updateHealth(selectedPlayer)
	-- Disconnect the previous health connection if it exists
	if currentHealthConnection then
		currentHealthConnection:Disconnect()
	end

	-- Now check the new player's health
	if selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
		local humanoid = selectedPlayer.Character.Humanoid

		-- Initial health update
		healthLabel.Text = "Health: " .. humanoid.Health

		-- Connect to the Health property change event
		currentHealthConnection = humanoid:GetPropertyChangedSignal("Health"):Connect(function()
			-- Update health whenever it changes
			healthLabel.Text = "Health: " .. humanoid.Health
		end)
	end
end

-- Function to update level when it changes
local function updateLevel(selectedPlayer)
	-- Disconnect the previous level connection if it exists
	if currentLevelConnection then
		currentLevelConnection:Disconnect()
	end

	-- Now check the new player's level
	local levelValue = selectedPlayer:WaitForChild("Data"):WaitForChild("Level")

	-- Initial level update
	levelLabel.Text = "Level: " .. levelValue.Value

	-- Connect to the Level property change event
	currentLevelConnection = levelValue:GetPropertyChangedSignal("Value"):Connect(function()
		-- Update level whenever it changes
		levelLabel.Text = "Level: " .. levelValue.Value
	end)
end

-- Update player details
local function updateDetails(selectedPlayer)
	displayNameLabel.Text = selectedPlayer.DisplayName
	usernameLabel.Text = selectedPlayer.Name

	-- Start updating health and level when the player is selected
	updateHealth(selectedPlayer)
	updateLevel(selectedPlayer)
end

-- Refresh player list
local function refreshPlayerList()
	for _, child in ipairs(playerListFrame:GetChildren()) do
		if child:IsA("TextButton") then
			child:Destroy()
		end
	end

	for _, plr in ipairs(Players:GetPlayers()) do
		local button = Instance.new("TextButton", playerListFrame)
		button.Size = UDim2.new(1, -8, 0, 30)
		button.Text = plr.DisplayName
		button.BackgroundColor3 = Color3.fromRGB(160, 160, 160)
		button.TextScaled = true
		button.Font = Enum.Font.SourceSans
		button.TextColor3 = Color3.fromRGB(20, 20, 20)
		button.MouseButton1Click:Connect(function()
			updateDetails(plr)
		end)
	end
end

-- Auto refresh player list every 5 seconds
task.spawn(function()
	while true do
		refreshPlayerList()
		task.wait(5)
	end
end)

refreshPlayerList()

local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false  -- Prevent the UI from resetting on spawn
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create ImageButton
local imageButton = Instance.new("ImageButton")
imageButton.Parent = screenGui
imageButton.Size = UDim2.new(0, 50, 0, 50)  -- Set size of the button
imageButton.Position = UDim2.new(0, 10, 0, 70)  -- Move the button down 50 pixels
imageButton.Image = "rbxassetid://128243454668365"  -- Set image using the asset ID

-- Set the button's background transparency to 100% (invisible)
imageButton.BackgroundTransparency = 1

-- Create UICorner for rounding the button's corners
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(1, 0)  -- Full circle if the button is square
uiCorner.Parent = imageButton

-- When the button is clicked
imageButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)
